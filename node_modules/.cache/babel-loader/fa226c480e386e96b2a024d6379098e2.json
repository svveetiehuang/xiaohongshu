{"ast":null,"code":"import { fromJS } from 'immutable';\nimport * as actionTypes from './actionTypes';\nconst defaultState = fromJS({\n  bigPic: [],\n  currentId: 0,\n  nextId: 0\n});\nexport default ((state = defaultState, action) => {\n  switch (action.type) {\n    case actionTypes.CHANGE_STORE_DISCOVERY:\n      console.log('aa');\n      return state.set({\n        // 对于要转成 immutable 对象的 JS 对象，可以先用点的写法写到最后再转\n        bigPic: fromJS(action.data.bigPic) // 把第一张图的 id 同时放进 currentId 和 nextId 中\n        // currentId: fromJS(action.data.bigPic[0].id),\n        // nextId: fromJS(action.data.bigPic[0].id)\n\n      });\n\n    case actionTypes.NEXT_PIC:\n      // if\n      return state.set('nextId', state.get('bigPic') + 1);\n\n    case actionTypes.CHANGE_CURRENT_ID:\n      return state.set('currentId', state.get('nextId'));\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/svveetie/Downloads/h 前端/xhs/src/pages/discovery/store/reducer.js"],"names":["fromJS","actionTypes","defaultState","bigPic","currentId","nextId","state","action","type","CHANGE_STORE_DISCOVERY","console","log","set","data","NEXT_PIC","get","CHANGE_CURRENT_ID"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,MAAMC,YAAY,GAAGF,MAAM,CAAC;AAC1BG,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,SAAS,EAAE,CAFe;AAG1BC,EAAAA,MAAM,EAAE;AAHkB,CAAD,CAA3B;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,sBAAjB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,aAAOL,KAAK,CAACM,GAAN,CAAU;AACf;AACAT,QAAAA,MAAM,EAAEH,MAAM,CAACO,MAAM,CAACM,IAAP,CAAYV,MAAb,CAFC,CAGf;AACA;AACA;;AALe,OAAV,CAAP;;AAOF,SAAKF,WAAW,CAACa,QAAjB;AACE;AACA,aAAOR,KAAK,CAACM,GAAN,CAAU,QAAV,EAAoBN,KAAK,CAACS,GAAN,CAAU,QAAV,IAAsB,CAA1C,CAAP;;AACF,SAAKd,WAAW,CAACe,iBAAjB;AACE,aAAOV,KAAK,CAACM,GAAN,CAAU,WAAV,EAAuBN,KAAK,CAACS,GAAN,CAAU,QAAV,CAAvB,CAAP;;AACF;AACE,aAAOT,KAAP;AAhBJ;AAkBD,CAnBD","sourcesContent":["import { fromJS } from 'immutable'\nimport * as actionTypes from './actionTypes'\n\nconst defaultState = fromJS({\n  bigPic: [],\n  currentId: 0,\n  nextId: 0\n})\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case actionTypes.CHANGE_STORE_DISCOVERY:\n      console.log('aa')\n      return state.set({\n        // 对于要转成 immutable 对象的 JS 对象，可以先用点的写法写到最后再转\n        bigPic: fromJS(action.data.bigPic)\n        // 把第一张图的 id 同时放进 currentId 和 nextId 中\n        // currentId: fromJS(action.data.bigPic[0].id),\n        // nextId: fromJS(action.data.bigPic[0].id)\n      })\n    case actionTypes.NEXT_PIC:\n      // if\n      return state.set('nextId', state.get('bigPic') + 1)\n    case actionTypes.CHANGE_CURRENT_ID:\n      return state.set('currentId', state.get('nextId'))\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}