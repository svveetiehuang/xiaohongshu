{"ast":null,"code":"var _jsxFileName = \"/Users/svveetie/Downloads/h \\u524D\\u7AEF/xhs/src/pages/discovery/components/NoteImg.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport { Carousel, Switch, SmallPics, SmallPic } from '../style';\nimport { actionCreators } from '../store'; // 详情页\n\nclass NoteImg extends PureComponent {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(Carousel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"big-pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, this.props.pics.map(item => React.createElement(CSSTransition, {\n      key: item.get('id') // in 属性的值由 false 变 true 时执行入场动画（按时间给内部标签加上和移除 enter 相关的样式）\n      // 当 nextId 不等于 currentId 时执行动画（通常是等于的，store 中初始值也是相等的，只有点击按钮或缩略图时会改变 nextId 的值导致二者不等，右侧显示第二张图片并启动动画——同时移动两张图片）\n      // 动画靠 in 属性值的变化启动，渲染靠 props 中数据的变化启动\n      ,\n      in: this.props.nextId !== this.props.currentId,\n      classNames: this.props.direction,\n      timeout: 800 // 动画执行完后，利用钩子函数把 nextId 的值给 currentId，二者再次相等（此时前一张图片消失）\n      ,\n      onEntered: this.props.changeCurrentId\n      /* 总结：\n      点击按钮/缩略图时，让 store 的值不等，触发动画，且重新渲染显示两张图；\n      动画结束时，让 store 的值相等，重新渲染只显示中间一张图，另外的图排到右边（行内样式优先级高） */\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      // 因为 id 的值可能没有规律，所以在 json 中给每个图片按序写上 index，从0开始，方便做判断和切换图片\n      // 每次按左右按钮会改变图片的切换方向，包括即将出现的图片的初始位置，因此 this.props.direction 是影响样式的\n      className: item.get('index') === this.props.currentId ? 'active ' + this.props.direction : this.props.direction,\n      style: {\n        background: 'url(' + item.get('bigUrl') + ') no-repeat center/contain',\n        // id 等于 currentId 或 nextId 的 li 才可以显示\n        display: item.get('index') === this.props.currentId || item.get('index') === this.props.nextId ? 'block' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })))), React.createElement(Switch, {\n      className: \"left\",\n      onClick: this.props.handleLeft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      className: \"right\",\n      onClick: this.props.handleRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(SmallPics, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.props.pics.map(item => {\n      return React.createElement(SmallPic, {\n        style: {\n          background: 'url(' + item.get('smallUrl') + ') no-repeat cover'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      });\n    }), React.createElement(SmallPic, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(SmallPic, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(SmallPic, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(SmallPic, {\n      className: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(SmallPic, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n  componentDidMount() {\n    this.props.changeDiscovery();\n  }\n\n}\n\nconst mapState = state => ({\n  pics: state.getIn(['discovery', 'pics']),\n  currentId: state.getIn(['discovery', 'currentId']),\n  nextId: state.getIn(['discovery', 'nextId']),\n  direction: state.getIn(['discovery', 'direction'])\n});\n\nconst mapDispatch = dispatch => ({\n  changeDiscovery() {\n    dispatch(actionCreators.getDiscovery());\n  },\n\n  handleLeft() {\n    dispatch(actionCreators.lastPic());\n  },\n\n  handleRight() {\n    dispatch(actionCreators.nextPic());\n  },\n\n  changeCurrentId() {\n    dispatch(actionCreators.changeCurrentId());\n  }\n\n});\n\nexport default connect(mapState, mapDispatch)(NoteImg); // export default NoteImg","map":{"version":3,"sources":["/Users/svveetie/Downloads/h 前端/xhs/src/pages/discovery/components/NoteImg.js"],"names":["React","PureComponent","connect","CSSTransition","Carousel","Switch","SmallPics","SmallPic","actionCreators","NoteImg","render","props","pics","map","item","get","nextId","currentId","direction","changeCurrentId","background","display","handleLeft","handleRight","componentDidMount","changeDiscovery","mapState","state","getIn","mapDispatch","dispatch","getDiscovery","lastPic","nextPic"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { CSSTransition } from 'react-transition-group'\nimport { Carousel, Switch, SmallPics, SmallPic } from '../style'\nimport { actionCreators } from '../store'\n\n// 详情页\nclass NoteImg extends PureComponent {\n  render () {\n    return (\n      <div>\n        <Carousel>\n          {/* Carousel 包含大图和切换按钮 */}\n          <ul className='big-pic'>\n            {/* 保证内部所有标签都能使用动画 加上之后 首次渲染也会触发动画 异步数据并非首次渲染？ */}\n            {/* <TransitionGroup> */}\n            {this.props.pics.map(item => (\n              <CSSTransition\n                key={item.get('id')}\n                // in 属性的值由 false 变 true 时执行入场动画（按时间给内部标签加上和移除 enter 相关的样式）\n                // 当 nextId 不等于 currentId 时执行动画（通常是等于的，store 中初始值也是相等的，只有点击按钮或缩略图时会改变 nextId 的值导致二者不等，右侧显示第二张图片并启动动画——同时移动两张图片）\n                // 动画靠 in 属性值的变化启动，渲染靠 props 中数据的变化启动\n                in={this.props.nextId !== this.props.currentId}\n                classNames={this.props.direction}\n                timeout={800}\n                // 动画执行完后，利用钩子函数把 nextId 的值给 currentId，二者再次相等（此时前一张图片消失）\n                onEntered={this.props.changeCurrentId}\n                /* 总结：\n                点击按钮/缩略图时，让 store 的值不等，触发动画，且重新渲染显示两张图；\n                动画结束时，让 store 的值相等，重新渲染只显示中间一张图，另外的图排到右边（行内样式优先级高） */\n              >\n                <li\n                  // 因为 id 的值可能没有规律，所以在 json 中给每个图片按序写上 index，从0开始，方便做判断和切换图片\n                  // 每次按左右按钮会改变图片的切换方向，包括即将出现的图片的初始位置，因此 this.props.direction 是影响样式的\n                  className={\n                    item.get('index') === this.props.currentId\n                      ? 'active ' + this.props.direction\n                      : this.props.direction\n                  }\n                  style={{\n                    background:\n                      'url(' +\n                      item.get('bigUrl') +\n                      ') no-repeat center/contain',\n                    // id 等于 currentId 或 nextId 的 li 才可以显示\n                    display:\n                      item.get('index') === this.props.currentId ||\n                      item.get('index') === this.props.nextId\n                        ? 'block'\n                        : 'none'\n                  }}\n                />\n              </CSSTransition>\n            ))}\n            {/* </TransitionGroup> */}\n          </ul>\n\n          <Switch className='left' onClick={this.props.handleLeft} />\n          <Switch className='right' onClick={this.props.handleRight} />\n        </Carousel>\n\n        <SmallPics>\n          {this.props.pics.map(item => {\n            return (\n              <SmallPic\n                style={{\n                  background:\n                    'url(' + item.get('smallUrl') + ') no-repeat cover'\n                }}\n              />\n            )\n          })}\n          <SmallPic />\n          <SmallPic />\n          <SmallPic />\n          <SmallPic className='active' />\n          <SmallPic />\n        </SmallPics>\n      </div>\n    )\n  }\n\n  componentDidMount () {\n    this.props.changeDiscovery()\n  }\n}\n\nconst mapState = state => ({\n  pics: state.getIn(['discovery', 'pics']),\n  currentId: state.getIn(['discovery', 'currentId']),\n  nextId: state.getIn(['discovery', 'nextId']),\n  direction: state.getIn(['discovery', 'direction'])\n})\n\nconst mapDispatch = dispatch => ({\n  changeDiscovery () {\n    dispatch(actionCreators.getDiscovery())\n  },\n  handleLeft () {\n    dispatch(actionCreators.lastPic())\n  },\n  handleRight () {\n    dispatch(actionCreators.nextPic())\n  },\n  changeCurrentId () {\n    dispatch(actionCreators.changeCurrentId())\n  }\n})\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(NoteImg)\n\n// export default NoteImg\n"]},"metadata":{},"sourceType":"module"}