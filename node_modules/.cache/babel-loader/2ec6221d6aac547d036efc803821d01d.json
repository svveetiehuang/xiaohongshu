{"ast":null,"code":"var _jsxFileName = \"/Users/svveetie/Downloads/h \\u524D\\u7AEF/xhs/src/pages/explore/components/Notes.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { NoteWrapper, NoteColumn, Note } from '../style';\nimport { actionCreators } from '../store';\n\nclass Notes extends PureComponent {\n  render() {\n    return React.createElement(NoteWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, this.props.note.map((item, index) => // 记得外层循环项也要加 key\n    React.createElement(NoteColumn, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, item.map(item => React.createElement(Link, {\n      key: item.get('id'),\n      to: '/discovery/item/' + item.get('id'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Note, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"note-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: item.get('noteImg'),\n      className: \"note-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      className: item.get('video') ? 'iconfont video' : 'iconfont video hidden',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"\\uE7E8\"), React.createElement(\"h3\", {\n      className: \"note-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, item.get('title'))), React.createElement(\"div\", {\n      className: \"note-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: item.get('userImg'),\n      className: \"user-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, item.get('userName'))), React.createElement(\"div\", {\n      className: \"like\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"iconfont heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"\\uE62B\"), React.createElement(\"span\", {\n      className: \"likes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, item.get('likes'))))))))));\n  }\n\n  componentDidMount() {\n    this.props.changeNoteData();\n  }\n\n}\n\nconst mapState = state => ({\n  note: state.getIn(['explore', 'note'])\n});\n\nconst mapDispatch = dispatch => ({\n  changeNoteData() {\n    // dispatch 一个函数会执行该函数（函数内部会获取 AJAX 数据并发送给 store）\n    dispatch(actionCreators.getNote());\n  }\n\n});\n\nexport default connect(mapState, mapDispatch)(Notes);","map":{"version":3,"sources":["/Users/svveetie/Downloads/h 前端/xhs/src/pages/explore/components/Notes.js"],"names":["React","PureComponent","connect","Link","NoteWrapper","NoteColumn","Note","actionCreators","Notes","render","props","note","map","item","index","get","componentDidMount","changeNoteData","mapState","state","getIn","mapDispatch","dispatch","getNote"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { NoteWrapper, NoteColumn, Note } from '../style'\nimport { actionCreators } from '../store'\n\nclass Notes extends PureComponent {\n  render () {\n    return (\n      <NoteWrapper>\n        {/* 两层循环 */}\n        {/* note 是 immutable 对象 */}\n        {this.props.note.map((item, index) => (\n          // 记得外层循环项也要加 key\n          <NoteColumn key={index}>\n            {item.map(item => (\n              <Link\n                key={item.get('id')}\n                to={'/discovery/item/' + item.get('id')}\n              >\n                <Note>\n                  <div className='note-info'>\n                    <img\n                      alt=''\n                      src={item.get('noteImg')}\n                      className='note-img'\n                    />\n                    <i\n                      className={\n                        item.get('video')\n                          ? 'iconfont video'\n                          : 'iconfont video hidden'\n                      }\n                    >\n                      &#xe7e8;\n                    </i>\n                    <h3 className='note-title'>{item.get('title')}</h3>\n                  </div>\n\n                  <div className='note-append'>\n                    <div className='user'>\n                      <img\n                        alt=''\n                        src={item.get('userImg')}\n                        className='user-img'\n                      />\n                      <span className='name'>{item.get('userName')}</span>\n                    </div>\n\n                    <div className='like'>\n                      <i className='iconfont heart'>&#xe62b;</i>\n                      <span className='likes'>{item.get('likes')}</span>\n                    </div>\n                  </div>\n                </Note>\n              </Link>\n            ))}\n          </NoteColumn>\n        ))}\n      </NoteWrapper>\n    )\n  }\n\n  componentDidMount () {\n    this.props.changeNoteData()\n  }\n}\n\nconst mapState = state => ({\n  note: state.getIn(['explore', 'note'])\n})\n\nconst mapDispatch = dispatch => ({\n  changeNoteData () {\n    // dispatch 一个函数会执行该函数（函数内部会获取 AJAX 数据并发送给 store）\n    dispatch(actionCreators.getNote())\n  }\n})\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(Notes)\n"]},"metadata":{},"sourceType":"module"}