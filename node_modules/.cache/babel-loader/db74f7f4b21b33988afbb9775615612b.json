{"ast":null,"code":"import { fromJS } from 'immutable';\nimport * as actionTypes from './actionTypes';\nconst defaultState = fromJS({\n  bigPic: [],\n  currentId: 1,\n  nextId: 1\n});\nexport default ((state = defaultState, action) => {\n  switch (action.type) {\n    case actionTypes.CHANGE_STORE_DISCOVERY:\n      return state.merge({\n        bigPic: fromJS(action.data).get('bigPic'),\n        currentId: fromJS(action.data).getIn(['bigPic', 'id']),\n        nextId: fromJS(action.data).getIn(['bigPic', 'id'])\n      });\n\n    case actionTypes.NEXT_ADD_ONE:\n      // if\n      return state.set('nextId', state.get('currentId') + 1);\n\n    case actionTypes.CHANGE_CURRENT_ID:\n      return state.set('currentId', state.get('nextId'));\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/svveetie/Downloads/h 前端/xhs/src/pages/discovery/store/reducer.js"],"names":["fromJS","actionTypes","defaultState","bigPic","currentId","nextId","state","action","type","CHANGE_STORE_DISCOVERY","merge","data","get","getIn","NEXT_ADD_ONE","set","CHANGE_CURRENT_ID"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,MAAMC,YAAY,GAAGF,MAAM,CAAC;AAC1BG,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,SAAS,EAAE,CAFe;AAG1BC,EAAAA,MAAM,EAAE;AAHkB,CAAD,CAA3B;AAMA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,sBAAjB;AACE,aAAOH,KAAK,CAACI,KAAN,CAAY;AACjBP,QAAAA,MAAM,EAAEH,MAAM,CAACO,MAAM,CAACI,IAAR,CAAN,CAAoBC,GAApB,CAAwB,QAAxB,CADS;AAEjBR,QAAAA,SAAS,EAAEJ,MAAM,CAACO,MAAM,CAACI,IAAR,CAAN,CAAoBE,KAApB,CAA0B,CAAC,QAAD,EAAW,IAAX,CAA1B,CAFM;AAGjBR,QAAAA,MAAM,EAAEL,MAAM,CAACO,MAAM,CAACI,IAAR,CAAN,CAAoBE,KAApB,CAA0B,CAAC,QAAD,EAAW,IAAX,CAA1B;AAHS,OAAZ,CAAP;;AAKF,SAAKZ,WAAW,CAACa,YAAjB;AACE;AACA,aAAOR,KAAK,CAACS,GAAN,CAAU,QAAV,EAAoBT,KAAK,CAACM,GAAN,CAAU,WAAV,IAAyB,CAA7C,CAAP;;AACF,SAAKX,WAAW,CAACe,iBAAjB;AACE,aAAOV,KAAK,CAACS,GAAN,CAAU,WAAV,EAAuBT,KAAK,CAACM,GAAN,CAAU,QAAV,CAAvB,CAAP;;AACF;AACE,aAAON,KAAP;AAbJ;AAeD,CAhBD","sourcesContent":["import { fromJS } from 'immutable'\nimport * as actionTypes from './actionTypes'\n\nconst defaultState = fromJS({\n  bigPic: [],\n  currentId: 1,\n  nextId: 1\n})\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case actionTypes.CHANGE_STORE_DISCOVERY:\n      return state.merge({\n        bigPic: fromJS(action.data).get('bigPic'),\n        currentId: fromJS(action.data).getIn(['bigPic', 'id']),\n        nextId: fromJS(action.data).getIn(['bigPic', 'id'])\n      })\n    case actionTypes.NEXT_ADD_ONE:\n      // if\n      return state.set('nextId', state.get('currentId') + 1)\n    case actionTypes.CHANGE_CURRENT_ID:\n      return state.set('currentId', state.get('nextId'))\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}