{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nexport const getDiscovery = () => {\n  return dispatch => {\n    axios.get('/api/discovery.json').then(res => {\n      dispatch(changeStoreDiscovery(res.data.data));\n    }).catch(() => {\n      alert('获取数据失败，请检查 json 文件是否存在');\n    });\n  };\n};\nexport const changeCurrentId = () => ({\n  type: actionTypes.CHANGE_CURRENT_ID\n});\nexport const nextPic = () => ({\n  type: actionTypes.NEXT_PIC\n});\nexport const lastPic = () => ({\n  type: actionTypes.LAST_PIC\n});\nexport const handleSmallPic = () => ({\n  type: actionTypes.SMALL_PIC_CLICK\n}); // 供内部使用的方法（不导出）\n\nconst changeStoreDiscovery = data => ({\n  type: actionTypes.CHANGE_STORE_DISCOVERY,\n  data\n});","map":{"version":3,"sources":["/Users/svveetie/Downloads/h 前端/xhs/src/pages/discovery/store/actionCreators.js"],"names":["axios","actionTypes","getDiscovery","dispatch","get","then","res","changeStoreDiscovery","data","catch","alert","changeCurrentId","type","CHANGE_CURRENT_ID","nextPic","NEXT_PIC","lastPic","LAST_PIC","handleSmallPic","SMALL_PIC_CLICK","CHANGE_STORE_DISCOVERY"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAOC,QAAQ,IAAI;AACjBH,IAAAA,KAAK,CACFI,GADH,CACO,qBADP,EAEGC,IAFH,CAEQC,GAAG,IAAI;AACXH,MAAAA,QAAQ,CAACI,oBAAoB,CAACD,GAAG,CAACE,IAAJ,CAASA,IAAV,CAArB,CAAR;AACD,KAJH,EAKGC,KALH,CAKS,MAAM;AACXC,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,KAPH;AAQD,GATD;AAUD,CAXM;AAaP,OAAO,MAAMC,eAAe,GAAG,OAAO;AACpCC,EAAAA,IAAI,EAAEX,WAAW,CAACY;AADkB,CAAP,CAAxB;AAIP,OAAO,MAAMC,OAAO,GAAG,OAAO;AAC5BF,EAAAA,IAAI,EAAEX,WAAW,CAACc;AADU,CAAP,CAAhB;AAIP,OAAO,MAAMC,OAAO,GAAG,OAAO;AAC5BJ,EAAAA,IAAI,EAAEX,WAAW,CAACgB;AADU,CAAP,CAAhB;AAIP,OAAO,MAAMC,cAAc,GAAG,OAAO;AACnCN,EAAAA,IAAI,EAAEX,WAAW,CAACkB;AADiB,CAAP,CAAvB,C,CAIP;;AACA,MAAMZ,oBAAoB,GAAGC,IAAI,KAAK;AACpCI,EAAAA,IAAI,EAAEX,WAAW,CAACmB,sBADkB;AAEpCZ,EAAAA;AAFoC,CAAL,CAAjC","sourcesContent":["import axios from 'axios'\nimport * as actionTypes from './actionTypes'\n\nexport const getDiscovery = () => {\n  return dispatch => {\n    axios\n      .get('/api/discovery.json')\n      .then(res => {\n        dispatch(changeStoreDiscovery(res.data.data))\n      })\n      .catch(() => {\n        alert('获取数据失败，请检查 json 文件是否存在')\n      })\n  }\n}\n\nexport const changeCurrentId = () => ({\n  type: actionTypes.CHANGE_CURRENT_ID\n})\n\nexport const nextPic = () => ({\n  type: actionTypes.NEXT_PIC\n})\n\nexport const lastPic = () => ({\n  type: actionTypes.LAST_PIC\n})\n\nexport const handleSmallPic = () => ({\n  type: actionTypes.SMALL_PIC_CLICK\n})\n\n// 供内部使用的方法（不导出）\nconst changeStoreDiscovery = data => ({\n  type: actionTypes.CHANGE_STORE_DISCOVERY,\n  data\n})\n"]},"metadata":{},"sourceType":"module"}