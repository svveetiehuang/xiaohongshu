{"ast":null,"code":"import { fromJS } from 'immutable';\nimport * as actionTypes from './actionTypes';\nconst defaultState = fromJS({\n  bigPic: [],\n  picSum: 1,\n  currentId: 0,\n  nextId: 0\n});\nexport default ((state = defaultState, action) => {\n  switch (action.type) {\n    case actionTypes.CHANGE_STORE_DISCOVERY:\n      // 对于要转成 immutable 对象的 JS 对象，可以先用点的写法写到最后再转\n      return state.merge({\n        bigPic: fromJS(action.data.bigPic),\n        picSum: action.data.bigPic.length\n      });\n\n    case actionTypes.NEXT_PIC:\n      if (state.get('currentId') === state.get('picSum') - 1) {\n        state.set('nextId', 0);\n      }\n\n      return state.set('nextId', state.get('currentId') + 1);\n\n    case actionTypes.CHANGE_CURRENT_ID:\n      return state.set('currentId', state.get('nextId'));\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/svveetie/Downloads/h 前端/xhs/src/pages/discovery/store/reducer.js"],"names":["fromJS","actionTypes","defaultState","bigPic","picSum","currentId","nextId","state","action","type","CHANGE_STORE_DISCOVERY","merge","data","length","NEXT_PIC","get","set","CHANGE_CURRENT_ID"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,MAAMC,YAAY,GAAGF,MAAM,CAAC;AAC1BG,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,MAAM,EAAE,CAFkB;AAG1BC,EAAAA,SAAS,EAAE,CAHe;AAI1BC,EAAAA,MAAM,EAAE;AAJkB,CAAD,CAA3B;AAOA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAW,CAACS,sBAAjB;AACE;AACA,aAAOH,KAAK,CAACI,KAAN,CAAY;AACjBR,QAAAA,MAAM,EAAEH,MAAM,CAACQ,MAAM,CAACI,IAAP,CAAYT,MAAb,CADG;AAEjBC,QAAAA,MAAM,EAAEI,MAAM,CAACI,IAAP,CAAYT,MAAZ,CAAmBU;AAFV,OAAZ,CAAP;;AAIF,SAAKZ,WAAW,CAACa,QAAjB;AACE,UAAIP,KAAK,CAACQ,GAAN,CAAU,WAAV,MAA2BR,KAAK,CAACQ,GAAN,CAAU,QAAV,IAAsB,CAArD,EAAwD;AACtDR,QAAAA,KAAK,CAACS,GAAN,CAAU,QAAV,EAAoB,CAApB;AACD;;AACD,aAAOT,KAAK,CAACS,GAAN,CAAU,QAAV,EAAoBT,KAAK,CAACQ,GAAN,CAAU,WAAV,IAAyB,CAA7C,CAAP;;AACF,SAAKd,WAAW,CAACgB,iBAAjB;AACE,aAAOV,KAAK,CAACS,GAAN,CAAU,WAAV,EAAuBT,KAAK,CAACQ,GAAN,CAAU,QAAV,CAAvB,CAAP;;AACF;AACE,aAAOR,KAAP;AAfJ;AAiBD,CAlBD","sourcesContent":["import { fromJS } from 'immutable'\nimport * as actionTypes from './actionTypes'\n\nconst defaultState = fromJS({\n  bigPic: [],\n  picSum: 1,\n  currentId: 0,\n  nextId: 0\n})\n\nexport default (state = defaultState, action) => {\n  switch (action.type) {\n    case actionTypes.CHANGE_STORE_DISCOVERY:\n      // 对于要转成 immutable 对象的 JS 对象，可以先用点的写法写到最后再转\n      return state.merge({\n        bigPic: fromJS(action.data.bigPic),\n        picSum: action.data.bigPic.length\n      })\n    case actionTypes.NEXT_PIC:\n      if (state.get('currentId') === state.get('picSum') - 1) {\n        state.set('nextId', 0)\n      }\n      return state.set('nextId', state.get('currentId') + 1)\n    case actionTypes.CHANGE_CURRENT_ID:\n      return state.set('currentId', state.get('nextId'))\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}